# Mussel genomes assembly pipeline

import glob
import os.path
import re
import math
from snakemake.utils import min_version

min_version("5.27.4")

configfile: "config/config.yaml"

container: config['sif_tools']

include: "rules/common.smk"
include: "rules/preprocessing.smk"
include: "rules/genomescope.smk"
include: "rules/supernova.smk"
include: "rules/purge_dups.smk"
include: "rules/busco.smk"
include: "rules/kat.smk"
include: "rules/stats.smk"
include: "rules/agouti.smk"
include: "rules/blobtoolkit.smk"
include: "rules/cleaning.smk"
include: "rules/mapping.smk"
# include: "rules/mtro_improvement.smk"
include: "rules/asm_improvement.smk"

rule all_v6:
    input: 
        expand("results/preprocessing/{sample}/{sample}_S1_L001_R1_001.fastq.gz",
            sample=config['samples']),
        expand("results/genomescope/{sample}/genomescope_res_{sample}/{sample}_preproc_summary.txt",
            sample=config['samples']),
        expand("results/supernova_assemblies/{sample}_{version}/DONE",
            sample=config['samples'], version=["v1", "v2"]),
        expand("results/fasta/{sample}_v3.pseudohap.fasta.gz",
            sample=config['samples'], version=["v3", "v4", "v5", "v6"]),
        expand("results/kat/{sample}_{version}/{sample}_{version}_spectra.pdf",
            sample=config['samples'], version=["v1", "v2", "v3", "v4", "v5", "v6"]),
        expand("results/blobtoolkit/DONE_{sample}_{version}",
            sample=config['samples'], version=['v5', 'v6']),
        expand("results/blobtoolkit/blobdirs/{sample}_v5_kept",
            sample=config['samples']),
        expand("results/mapping/{sample}_v6.bam",
            sample=config['samples']),
        expand("results/mapping/{sample}_v6.stats",
            sample=config['samples']),

rule asm_improvement:
    input:
        # expand("results/mtro_02/pilon/res_mtro_02_{num}/mtro_02_{num}.fasta",
        #     num=[f'{i+1:02}' for i in range(6, 15)]),
        # expand("results/mgal_02/pilon/res_mgal_02_{num}/mgal_02_{num}.fasta",
        #     num=[f'{i+1:02}' for i in range(6, 15)]),
        "results/fasta/gallo_v7.pseudohap.fasta.gz",
        #"results/fasta/tros_v7.pseudohap.fasta.gz",
        # "results/blobtoolkit/DONE_tros_v7",
        # "results/kat/tros_v7/tros_v7_spectra.pdf",

rule stats:
    input:
        # expand("results/busco/{sample}_{version}_{db}/run_{db}/short_summary.txt",
        #     sample=config['samples'], 
        #     version=["v1", "v2", "v3", "v4", "v5", "v6", "v7"],
        #     db=["metazoa_odb10", "mollusca_odb10"]),
        # expand("results/busco/{pub}_{db}/run_{db}/short_summary.txt",
        #     pub=['coruscus_GCA017311375', 'gallo_GCA900618805'], 
        #     db=["metazoa_odb10", "mollusca_odb10"]),
        "results/stats/busco_summary.tsv",
        "results/supernova_assemblies/supernova_assemblies_stats.csv",
        "results/stats/assembly_stats.csv",

rule repeats:
    input:
        expand("results/repeats/{asm}_db/{asm}_db-families.fa",
            asm=config['repeats']['asm_db']),