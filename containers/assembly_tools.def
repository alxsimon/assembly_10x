BootStrap: docker
From: ubuntu:20.04

%labels
	Author Alexis Simon
	Version v0.0.1

%environment
	export PATH=/opt/conda/bin:/opt/cargo/bin:$PATH
    export LC_ALL=C.UTF-8
	export LANG=C.UTF-8

%files
# GeneMark need to be downloaded in folder
# as it requires a licence agreement.
./gmes_linux_64.tar.gz /opt/
./gm_key_64.gz /opt/

%post -c bash
	apt-get update && apt-get upgrade -y
	export DEBIAN_FRONTEND=noninteractive
	apt-get install -y tzdata
	apt-get install -y \
		wget \
		git \
		build-essential \
		automake \
		curl \
		bzip2 \
		libcurl4-openssl-dev \
		libssh2-1-dev \
		libzip-dev \
		zlib1g-dev \
		libicu-dev \
		zstd \
		cpanminus

    ### Install Conda ###
	curl -sSL https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -o /tmp/miniconda.sh \
	&& bash /tmp/miniconda.sh -bp /opt/conda \
	&& export PATH=/opt/conda/bin:$PATH \
	&& conda update -y conda \
	&& conda clean --all --yes
	# If conda envs are needed, just source /conda_init.sh when using exec
	cp /opt/conda/etc/profile.d/conda.sh /conda_init.sh
	source /conda_init.sh

	conda config --add channels defaults
	conda config --add channels bioconda
	conda config --add channels conda-forge

	conda install numpy scipy matplotlib

	conda install mamba

	## Install R and packages ##
	conda install -y r-base=4.1.1 \
		r-stringi r-stringr		
	# for Genomescope and Smudgeplot
	conda install -y r-minpack.lm r-argparse r-viridis r-devtools

	## nubeam-dedup ##
	git clone https://github.com/daihang16/nubeamdedup.git /opt/nubeamdedup
	cd /opt/nubeamdedup && git checkout 25dd385
	cd Linux
	# tmp fix before upstream correction
	# sed -i 's;/usr/local/lib/libz.a;/usr/lib/x86_64-linux-gnu/libz.a;' Makefile
	make && make clean
	ln -s /opt/nubeamdedup/Linux/nubeam-dedup -t /usr/local/bin/

	## Proc10x ##
	# this requires Python 2, handle in snakemake with conda
    git clone https://github.com/ucdavis-bioinformatics/proc10xG.git /opt/proc10xG
	cd /opt/proc10xG && git checkout 7afbfcf

	## Custom KMC fork ##
	git clone https://github.com/tbenavi1/KMC.git /opt/KMC
	cd /opt/KMC && git checkout 1df71f6
	make
	ln -s /opt/KMC/bin/* -t /usr/local/bin/

    ## Genomescope 2.0 and Smudgeplot ##
    # Rscript -e 'install.packages(c("minpack.lm", "argparse", "viridis", "devtools"), clean=TRUE)'
	git clone https://github.com/tbenavi1/genomescope2.0.git /opt/genomescope2.0
	cd /opt/genomescope2.0 && git checkout 5034ed4
	Rscript -e 'install.packages(".", repos=NULL, type="source")'

	git clone https://github.com/KamilSJaron/smudgeplot /opt/smudgeplot
	cd /opt/smudgeplot && git checkout 950d7b5
	Rscript install.R
	install -C exec/smudgeplot.py /usr/local/bin
	install -C exec/smudgeplot_plot.R /usr/local/bin

	## purge_dups ##
	git clone https://github.com/dfguan/purge_dups.git /opt/purge_dups
	cd /opt/purge_dups && git checkout e1934bb
	cd src && make
	ln -s /opt/purge_dups/bin/* -t /usr/bin/

	## AGOUTI ##
	git clone https://github.com/svm-zhang/AGOUTI.git /opt/agouti
	cd /opt/agouti && git checkout a7e65d6

	## Blobtoolkit ##
	mkdir -p /opt/blobtoolkit
	cd /opt/blobtoolkit
	git clone -b 'release/v2.4.0' https://github.com/blobtoolkit/blobtools2.git
	git clone https://github.com/alxsimon/insdc-pipeline

	## d4: d4tools and python API
    export CARGO_HOME="/opt/cargo"
    mamba install -y rust
    cargo install d4utils --version 0.1.16
    pip install pyd4

    ## get mosdepth with d4 support (not on bioconda yet) v0.3.1
    wget -P /usr/bin/ \
    https://github.com/brentp/mosdepth/releases/download/v0.3.1/mosdepth
    chmod +x /usr/bin/mosdepth

	## Install GeneMark ##
	cpanm YAML Hash::Merge Parallel::ForkManager MCE::Mutex \
		Thread::Queue threads Math::Utils
	cd /opt/
	tar -xzf gmes_linux_64.tar.gz
	rm gmes_linux_64.tar.gz
	gzip -d gm_key_64.gz
	rm gm_key_64.gz

	## InterProScan ##
	mamba install -c conda-forge openjdk=11.0.9.1
	cd /opt/
	VERSION='5.51-85.0'
	wget ftp://ftp.ebi.ac.uk/pub/software/unix/iprscan/5/${VERSION}/interproscan-${VERSION}-64-bit.tar.gz
	tar -pxzf interproscan-${VERSION}-64-bit.tar.gz
	rm interproscan-${VERSION}-64-bit.tar.gz
	cd interproscan-${VERSION}
	python3 initial_setup.py

%apprun run
	exec /bin/bash "$@"

%runscript
	exec /bin/bash "$@"

